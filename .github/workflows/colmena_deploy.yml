name: Environment Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      node:
        required: true
        type: string
      runner:
        required: true
        type: string
      pull_request_number:
        type: string

jobs:
  deploy:
    name: Environment Deploy
    environment: ${{ inputs.environment }}
    continue-on-error: true
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Install private ssh key
        uses: shimataro/ssh-key-action@d4fffb50872869abe2d9a9098a6d9c5aa7d16be4 # Install our ssh key. TODO: Replace with our own bash script
        with:
          key: ${{ secrets.COLMENA_SSH_KEY }}
          name: id_ed25519
          known_hosts: ${{ vars.COLMENA_KNOWN_HOSTS }}

      - name: Login to headscale
        uses: tailscale/github-action@8688eb839e58e6b25c1ae96cd99d1c173299b842 # Connect to headscale
        with:
          authkey: ${{ secrets.TS_AUTHKEY }}
          args: --login-server=https://vpn.tgstation13.org

      - name: Checkout (Branch)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        if: github.event_name != 'pull_request_target'

      - name: Checkout (PR Merge)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        if: github.event_name == 'pull_request_target'
        with:
          ref: "refs/pull/${{ inputs.pull_request_number }}/merge"

      - name: Mount compressed fs at /nix
        shell: bash
        run: |
          dd if=/dev/zero of=./nix-store.img bs=1 count=0 seek=15G
          mkfs.btrfs -M ./nix-store.img
          sudo mkdir /nix
          sudo mount -o defaults,noatime,compress=zstd ./nix-store.img /nix

      - name: Generate App Token
        id: app-token-generation
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Install Nix
        run: sh .github/workflows/install_lix.sh
        env:
          EXTRA_NIX_CONFIG: |
            access-tokens = github.com=${{ steps.app-token-generation.outputs.token }}
            experimental-features = nix-command flakes
            accept-flake-config = true
            extra-substituters = https://nix-community.cachix.org https://attic.tgstation13.org/tgstation-infrastructure
            extra-trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= tgstation-infrastructure:07mCKRLs4Y+ietmQ5A1Wn3hRYHVUu1vZ20xPmwMyrBA=

      - name: Authenticate Attic Binary Cache
        run: |
          nix profile install nixpkgs#attic-client
          attic login tgstation https://attic.tgstation13.org ${{ secrets.ATTIC_JWT_TOKEN }}

      - name: Print nix config before Build
        run: nix config show

      - name: Install Colmena
        run: |
          COLMENA_REVISION=$(jq -r '.nodes.colmena.locked.rev' flake.lock)
          echo "Current Colmena revision is: $COLMENA_REVISION"
          nix profile install github:zhaofengli/colmena/$COLMENA_REVISION

      - name: Deploy closure to Nodes
        run: |
          colmena apply --impure -v --on ${{ inputs.node }}
